<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2010/07/nuspec.xsd">
    <metadata minClientVersion="2.8.6">
        <id>directxtk12_desktop_2019</id>
        <version>0.0.0-SpecifyVersionOnCommandline</version>
        <title>DirectX Tool Kit for DirectX 12 (VS 2019/2022 Win32 for Windows 10/11)</title>
        <authors>Microsoft</authors>
        <owners>microsoft,directxtk</owners>
        <summary>The DirectX Tool Kit (aka DirectXTK) is a collection of helper classes for writing Direct3D 12 code in C++.</summary>
        <description>This version is for Windows desktop applications using Visual Studio 2019 or Visual Studio 2022.

Features:
Audio - low-level audio API using XAudio2
BufferHelpers - C++ helpers for creating D3D resources from CPU data
CommonStates - common D3D state combinations
DDSTextureLoader - light-weight DDS file texture loader
DescriptorHeap - helper for managing DX12 descriptor heaps
DirectXHelpers - misc C++ helpers for D3D programming
Effects - set of built-in shaders for common rendering tasks
EffectPipelineStateDescription - helper for creating PSOs
GamePad - gamepad controller helper using Windows.Gaming.Input
GeometricPrimitive - draws basic shapes such as cubes and spheres
GraphicsMemory - helper for managing graphics memory allocation
Keyboard - keyboard state tracking helper
Model - draws meshes loaded from .CMO, .SDKMESH, or .VBO files
Mouse - mouse helper
PostProcess - set of built-in shaders for common post-processing operations
PrimitiveBatch - simple and efficient way to draw user primitives
RenderTargetState - helper for communicating render target requirements when creating PSOs
ResourceUploadBatch - helper for managing texture resource upload to the GPU
ScreenGrab - light-weight screen shot saver
SimpleMath - simplified C++ wrapper for DirectXMath
SpriteBatch - simple &amp; efficient 2D sprite rendering
SpriteFont - bitmap based text rendering
VertexTypes - structures for commonly used vertex data formats
WICTextureLoader - WIC-based image file texture loader</description>
        <releaseNotes>Matches the December 15, 2022 release on GitHub.</releaseNotes>
        <projectUrl>http://go.microsoft.com/fwlink/?LinkID=615561</projectUrl>
        <repository type="git" url="https://github.com/microsoft/DirectXTK12.git" />
        <icon>images\icon.jpg</icon>
        <readme>docs\README.md</readme>
        <license type="expression">MIT</license>
        <requireLicenseAcceptance>false</requireLicenseAcceptance>
        <copyright>&#169; Microsoft Corporation. All rights reserved.</copyright>
        <tags>DirectX  DirectXTK  DirectXTK12  native nativepackage</tags>
    </metadata>

    <files>

        <file target="docs" src="*.md" />

        <file target="include" src="Inc\*" exclude="Inc\XboxDDSTextureLoader.h" />

        <file target="native\lib\x86\Debug" src="Bin\Desktop_2019_Win10\Win32\Debug\*.lib" />
        <file target="native\lib\x86\Debug" src="Bin\Desktop_2019_Win10\Win32\Debug\*.pdb" />

        <file target="native\lib\x86\Release" src="Bin\Desktop_2019_Win10\Win32\Release\*.lib" />
        <file target="native\lib\x86\Release" src="Bin\Desktop_2019_Win10\Win32\Release\*.pdb" />

        <file target="native\lib\x64\Debug" src="Bin\Desktop_2019_Win10\x64\Debug\*.lib" />
        <file target="native\lib\x64\Debug" src="Bin\Desktop_2019_Win10\x64\Debug\*.pdb" />

        <file target="native\lib\x64\Release" src="Bin\Desktop_2019_Win10\x64\Release\*.lib" />
        <file target="native\lib\x64\Release" src="Bin\Desktop_2019_Win10\x64\Release\*.pdb" />

        <file target="native\lib\ARM64\Debug" src="Bin\Desktop_2019_Win10\ARM64\Debug\*.lib" />
        <file target="native\lib\ARM64\Debug" src="Bin\Desktop_2019_Win10\ARM64\Debug\*.pdb" />

        <file target="native\lib\ARM64\Release" src="Bin\Desktop_2019_Win10\ARM64\Release\*.lib" />
        <file target="native\lib\ARM64\Release" src="Bin\Desktop_2019_Win10\ARM64\Release\*.pdb" />

        <file src=".nuget/directxtk12_desktop_2019.targets" target="build\native" />

        <file src=".nuget/icon.jpg" target="images\" />

    </files>
</package>
